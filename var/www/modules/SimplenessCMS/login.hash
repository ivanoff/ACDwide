#!/usr/bin/perl

use strict;
use SimplenessCMS::MAIN;
use File::Copy::Recursive qw( dircopy );

my $r;
$main::SESSION->{_ENABLED} = 1;

{
    #password is md5(pass+md5(login)+md5(login+pass))
    '/login' => sub {
        cache(0);   # don't cache this page
        my ( $l, $p ) = param( 'login', 'password' );
        if( $l ) {
            if( $main::CONFIG->{demo_enabled} && $l eq 'demo' && $p eq 'demo' && !$main::db->{'is_demo'} ) {
            # prepare demo mode envirement
                my $ip = $ENV{REMOTE_ADDR};
                $ip =~ s/\./_/g;
                $main::CONFIG->{'db_dbname'} .= '_'.$ip;
                # create demo database and reconnect
                `mysql -u$main::CONFIG->{'db_user'} -p$main::CONFIG->{'db_password'} -e "create database $main::CONFIG->{'db_dbname'}"`;
                `mysql -u$main::CONFIG->{'db_user'} -p$main::CONFIG->{'db_password'} $main::CONFIG->{'db_dbname'} < ../install_demo.sql`;
                my $dsn = 'DBI:'.$main::CONFIG->{'db_type'}
                        .':dbname='.$main::CONFIG->{'db_dbname'}
                        .';host='.$main::CONFIG->{'db_host'};
                my $dbh = DBI->connect($dsn, $main::CONFIG->{'db_user'}, $main::CONFIG->{'db_password'}, {PrintError => 1});
                $main::db->{'connect'} = \$dbh;
                $main::db->{'is_demo'} = 1 if $dbh;
                # create demo gallery folders
#                mkdir( images('PATH').'/'.$ip );
                dircopy( images('PATH').'/'.$_, images('PATH').'/'.$ip.'/'.$_ ) foreach qw( 1 2 3 );
                sql( "UPDATE base_content SET content_date_from=NOW()");
            }
            $r = sql( "SELECT * FROM base_users WHERE user_login=? 
                         AND user_password=MD5(CONCAT(?,MD5(?),MD5(?)))", $l, $p, $l, $p.$l );
            if ( $r->[0] ) {
                my $g = sql( "SELECT * FROM base_users_groups WHERE group_id=?", $r->[0]{group_id} );
                session( 'sgroup' , $g->[0]{group_name} );
                session( 'ip'     , $ENV{REMOTE_ADDR} );
                session( 'slogin' , md5_hex($l) );
                session( 'sid'    , $r->[0]{user_id} );
                session( 'sname'  , $r->[0]{user_name} );

                my %settings_default = ( 'show_addthis' => 1, );
                $r = sql( "SELECT * FROM base_users_settings WHERE user_id=?", $r->[0]{user_id} );
                $settings_default{ $_->{setting_name} } = $_->{setting_value} foreach @$r;
                foreach ( keys %settings_default ) {
                    session( $_, $settings_default{$_} );
                }
                redirect( 'login/success' );
            }
        }
        process( 'login/index.tpl' );
    },

    '/login/success' => sub {
        defaults { read_only => 1, };
        cache(0);   # don't cache this page
        $r = sql( "SELECT * FROM base_users WHERE MD5(user_login)=?", session('slogin') );
        process( 'login/success.tpl', { name => $r->[0]{user_name}, } );
    },

    '/login/exit' => sub {
        defaults { read_only => 1, };
        session;
        redirect2 ('');
    },

    '/login/recover(/new)?' => sub {
	my $new = shift;
        cache(0);   # don't cache this page
        if( param('login') ) {
            $r = sql( "SELECT * FROM base_users WHERE user_login=?", param('login') );
            if ( $r->[0] ) {
                sql( "DELETE FROM base_users_recover WHERE user_id=?", $r->[0]{user_id} );
                my $hash = md5_hex( param('login').time.$r->[0]{user_id}.rand().$r->[0]{user_password} );
                sql("INSERT INTO base_users_recover (user_id, recover) VALUES (?,?)", 
                        $r->[0]{user_id}, $hash);
                my ( $subj, $message ) = ( $new )? ( "Set new password", "new_password" ) : ( "Recovery password", "recover" );
                email ( { 
                         To => param('login'),
                    Subject => $subj,
                    Message => process('messages/'.$message.'.tpl', 
                                { name=>$r->[0]{user_name}, hash => $hash, } ),
                    } );
            }
            return process( 'login/recover/sent.tpl' );
        } else {
            return process( 'login/recover/index.tpl' );
        }
    },

    '/login/recover(/new)?/([0-9a-f]{32})' => sub {
	my $new = shift;
        cache(0);   # don't cache this page
        if( param('password') ) {
            my $recover = shift;
            $r = sql( "SELECT * FROM base_users_recover WHERE recover=?", $recover );
            if ( $r->[0] ) {
                my $r2 = sql( "SELECT * FROM base_users WHERE user_id=?", $r->[0]{user_id} );
                param_set( 'login', $r2->[0]{user_login} );
                sql( "UPDATE base_users SET user_password=MD5(CONCAT(?,MD5(?),MD5(?))) WHERE user_login=?",
                        param('password'), $r2->[0]{user_login}, 
                        param('password').$r2->[0]{user_login}, $r2->[0]{user_login} );
                sql( "DELETE FROM base_users_recover WHERE recover=?", $recover );
                # send result e-mail
                $r = sql( "SELECT user_name FROM base_users WHERE user_id=?", $r->[0]{user_id} );
                email ( { 
                         To => param('login'),
                    Subject => "Recovery password done",
                    Message => process( 'messages/recover_done.tpl', 
                                                { name => $r->[0]{user_name}, } ),
                } ) unless $new;
        	return module( '/login' );
            }
            return process( 'login/recover/done.tpl' );
        } else {
            return process( 'login/recover/password.tpl' );
        }
    },

    '/login/change' => sub {
        cache(0);   # don't cache this page
        if( param('password') ) {
            $r = sql( "SELECT * FROM base_users WHERE MD5(user_login)=?", session( 'slogin' ) );
            my $login = $r->[0]{user_login};
            $r = sql( "SELECT * FROM base_users WHERE user_login=? 
                        AND user_password=MD5(CONCAT(?,MD5(?),MD5(?)))", 
                        $login, param('password_old'), $login, 
                        param('password_old').$login);
            if ( $r->[0] ) {
                sql( "UPDATE base_users SET user_password=MD5(CONCAT(?,MD5(?),MD5(?))) WHERE user_login=?",
                        param('password'), $r->[0]{user_login}, 
                        param('password').$r->[0]{user_login}, $r->[0]{user_login} );
                return process( 'login/change/done.tpl' );
            }
        }
        process( 'login/change/index.tpl' );
    },

    '/login/register' => sub {
        cache(0);   # don't cache this page
#    return ""; ##don't register for a while
        if( param('login') =~ /[A-Z0-9\.\_\%\+\-]+@[A-Z0-9\.\-]+\.[A-Z]{2,4}/i ) {
            $r = sql( "SELECT * FROM base_users WHERE user_login=?", param('login') );
            if ( $r->[0] ) {
                redirect ('login/register/already');
            } else {
                sql( "INSERT INTO base_users (user_id, user_login, user_password, 
                                user_email, user_name, user_lang, group_id) 
                                VALUES (NULL,?,MD5(CONCAT(?,MD5(?),MD5(?))),?,?,?,5)", 
                        param('login'), rand(), param('login'), 
                        rand().param('login'), param('login'), param('name'),lang||'ru');
		return module '/login/recover/new';
            }
        }
        process( 'login/register/index.tpl' );
    },

    '/login/register/success' => sub {
        process( 'login/register/success.tpl' );
    },

    '/login/register/already' => sub {
        process( 'login/register/already.tpl' );
    },

    '/login/demo' => sub {
        process( 'login/demo_off.tpl' );
    },
    
    '/login/demo/off' => sub {
        my $ip = $ENV{REMOTE_ADDR};
        $ip =~ s/\./_/g;
        return 0 if !$main::db->{'is_demo'} || !$ip;
        remove_tree( images('PATH') ) if images('PATH') =~ /$ip\/*$/;
        `mysql -u$main::CONFIG->{'db_user'} -p$main::CONFIG->{'db_password'} -e "drop database $main::CONFIG->{'db_dbname'}"`
            if $main::CONFIG->{'db_dbname'} =~ /$ip$/;
        session;
        redirect2 ('login/demo');
    },

};
